{"ast":null,"code":"var _jsxFileName = \"/Users/jereldlim/Desktop/zilliqa-frontend/src/components/AccessForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AccessForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // passphrase: '',\n      // handle: '',\n      zilPayLoginBtnText: 'Login With Zilpay',\n      zilPayLogin: false,\n      address: ''\n    };\n\n    this.zilPayConnect = async () => {\n      try {\n        if (window.zilPay.wallet.isEnable) {\n          await window.zilPay.wallet.connect();\n\n          if (window.zilPay.wallet.isConnect) {\n            this.setState({\n              zilPayLoginBtnText: \"Logging In With Zilpay...\"\n            });\n            this.setState({\n              zilPayLogin: true\n            });\n            let currentAddress = await window.zilPay.wallet.defaultAccount.base16;\n            this.setState({\n              address: currentAddress\n            });\n            this.login();\n          }\n        } else {\n          console.warn('ZilPay not installed');\n        }\n      } catch (error) {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  login() {\n    // backend call to server\n    let data = {};\n    data.address = this.state.address;\n    const self = this;\n    axios.post(\"https://dev-api.zilliqa.com/api/v1/login\", data).then(function (response) {\n      const data = response.data;\n\n      if (data.flag === 144) {\n        this.setState({\n          zilPayloginBtnText: \"Try Again...\"\n        }); // self.setState({\n        //   isInvalidPassphrase: true,\n        //   emailErrorText: data.log\n        // });\n      } else {\n        //Set base16 address to localStorage\n        localStorage.setItem(\"address\", self.state.address);\n\n        if (self.state.zilPayLogin) {\n          localStorage.setItem(\"zilpay_login\", 'true');\n        } else {\n          //Set value of private key if login with keystore file\n          localStorage.setItem(\"zilpay_login\", 'false');\n          localStorage.setItem(\"private_key\", self.state.privateKey);\n        }\n\n        window.location = \"/home\";\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-3\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"m-1 card bg-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block btn-primary mb-1\",\n          onClick: this.zilPayConnect,\n          children: this.state.zilPayLoginBtnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"handle\",\n          children: \"Telegram Handle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.onChange,\n          value: this.state.handle,\n          id: \"handle\",\n          name: \"handle\",\n          placeholder: \"@elonmusk\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success mt-b\",\n          style: {\n            margin: 'auto',\n            display: 'block'\n          },\n          children: \"Get Started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AccessForm;","map":{"version":3,"sources":["/Users/jereldlim/Desktop/zilliqa-frontend/src/components/AccessForm.js"],"names":["React","Component","axios","config","AccessForm","state","zilPayLoginBtnText","zilPayLogin","address","zilPayConnect","window","zilPay","wallet","isEnable","connect","isConnect","setState","currentAddress","defaultAccount","base16","login","console","warn","error","onChange","e","target","name","value","data","self","post","then","response","flag","zilPayloginBtnText","localStorage","setItem","privateKey","location","catch","log","render","onSubmit","handle","margin","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport config from '../config';\n\nclass AccessForm extends Component {\n    state = {\n        // passphrase: '',\n        // handle: '',\n        zilPayLoginBtnText: 'Login With Zilpay',\n        zilPayLogin: false,\n        address: '',\n\n    }\n\n    zilPayConnect = async() => {\n        try {\n          if (window.zilPay.wallet.isEnable) {\n            await window.zilPay.wallet.connect();\n            if (window.zilPay.wallet.isConnect) {\n              this.setState({ zilPayLoginBtnText: \"Logging In With Zilpay...\" });\n              this.setState({ zilPayLogin: true });\n              let currentAddress = await window.zilPay.wallet.defaultAccount.base16;\n              this.setState({ address: currentAddress });\n              this.login();\n            }\n          } else {\n            console.warn('ZilPay not installed');\n          }\n        } catch (error) {}\n    }\n\n    login(){\n        // backend call to server\n\n        let data = {};\n        \n        data.address = this.state.address;    \n        const self = this;\n  \n        axios\n          .post(\"https://dev-api.zilliqa.com/api/v1/login\", data)\n          .then(function(response) {\n            const data = response.data;\n  \n            if (data.flag === 144) {\n              this.setState({ zilPayloginBtnText: \"Try Again...\" });\n              // self.setState({\n              //   isInvalidPassphrase: true,\n              //   emailErrorText: data.log\n              // });\n            } else {\n              //Set base16 address to localStorage\n              localStorage.setItem(\"address\", self.state.address);\n              if(self.state.zilPayLogin){\n                localStorage.setItem(\"zilpay_login\", 'true');\n              }else{\n                //Set value of private key if login with keystore file\n                localStorage.setItem(\"zilpay_login\", 'false');\n                localStorage.setItem(\"private_key\", self.state.privateKey);\n              }            \n              window.location = \"/home\";\n            }\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"mt-3\">Get Started</h1>\n                <form onSubmit={this.onSubmit} className=\"m-1 card bg-light\">\n                    {/* <label htmlFor=\"keystore\">Keystore File</label>\n                    <input type=\"file\" name=\"keystore\" id=\"keystore\" required/>\n\n                    <label htmlFor=\"passphrase\">Passphrase</label>\n                    <input type=\"text\" onChange={this.onChange} value={this.state.passphrase} name=\"passphrase\" id=\"passphrase\" placeholder=\"Passphrase\" required/> */}\n                    <button className=\"btn btn-block btn-primary mb-1\" onClick={this.zilPayConnect}>{this.state.zilPayLoginBtnText}</button>\n\n                    <label htmlFor=\"handle\">Telegram Handle</label>\n                    <input type=\"text\" onChange={this.onChange} value={this.state.handle} id=\"handle\" name=\"handle\" placeholder=\"@elonmusk\" required/>\n                    <button type=\"submit\" className=\"btn btn-success mt-b\" style={{ margin: 'auto', display: 'block' }}>Get Started!</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AccessForm;\n"]},"metadata":{},"sourceType":"module"}